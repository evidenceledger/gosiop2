// Code generated by ent, DO NOT EDIT.

package privatekey

import (
	"time"
)

const (
	// Label holds the string label denoting the privatekey type in the database.
	Label = "private_key"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldKty holds the string denoting the kty field in the database.
	FieldKty = "kty"
	// FieldAlg holds the string denoting the alg field in the database.
	FieldAlg = "alg"
	// FieldPrivate holds the string denoting the private field in the database.
	FieldPrivate = "private"
	// FieldJwk holds the string denoting the jwk field in the database.
	FieldJwk = "jwk"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the privatekey in the database.
	Table = "private_keys"
)

// Columns holds all SQL columns for privatekey fields.
var Columns = []string{
	FieldID,
	FieldKty,
	FieldAlg,
	FieldPrivate,
	FieldJwk,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "private_keys"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"account_keys",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultPrivate holds the default value on creation for the "private" field.
	DefaultPrivate bool
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)
